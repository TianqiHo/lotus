<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotus.backstage.order.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.lotus.backstage.order.model.Order">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="PRODUCT_ID" jdbcType="BIGINT" property="productId" />
    <result column="ORDER_CODE" jdbcType="VARCHAR" property="orderCode" />
    <result column="CURRENT_STATE_ID" jdbcType="BIGINT" property="currentStateId" />
    <result column="ADDRESS_ID" jdbcType="BIGINT" property="addressId" />
    <result column="VALID" jdbcType="INTEGER" property="valid" />
    <result column="CREATE_BY" jdbcType="BIGINT" property="createBy" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_BY" jdbcType="BIGINT" property="updateBy" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="LOG" jdbcType="VARCHAR" property="log" />
  </resultMap>
  
  <sql id="Base_Column_List">
    ID, PRODUCT_ID, ORDER_CODE, CURRENT_STATE_ID, ADDRESS_ID, VALID, CREATE_BY, CREATE_TIME, 
    UPDATE_BY, UPDATE_TIME, VERSION, LOG
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lotus.order
    where ID = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lotus.order
    where ID = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.lotus.backstage.order.model.Order" useGeneratedKeys="true" keyProperty="id">
    <selectKey order="BEFORE" keyProperty="id" resultType="Long">
      SELECT FUN_GET_ID()
    </selectKey>
    insert into lotus.order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="orderCode != null">
        ORDER_CODE,
      </if>
      <if test="currentStateId != null">
        CURRENT_STATE_ID,
      </if>
      <if test="addressId != null">
        ADDRESS_ID,
      </if>
      <if test="valid != null">
        VALID,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="log != null">
        LOG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="currentStateId != null">
        #{currentStateId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=BIGINT},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="log != null">
        #{log,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.lotus.backstage.order.model.Order">
    update lotus.order
    <set>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="currentStateId != null">
        CURRENT_STATE_ID = #{currentStateId,jdbcType=BIGINT},
      </if>
      <if test="addressId != null">
        ADDRESS_ID = #{addressId,jdbcType=BIGINT},
      </if>
      <if test="valid != null">
        VALID = #{valid,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="log != null">
        LOG = #{log,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectClientOrders" parameterType="com.lotus.backstage.order.model.Order" resultType="com.lotus.backstage.order.model.Order">
	  SELECT 
	    A.ID,
		A.ORDER_CODE AS orderCode,
		(CASE B.STATUS WHEN 1 THEN '已下单'  WHEN 2 THEN '已发货' WHEN 3 THEN '已完成' WHEN 4 THEN '已删除' ELSE '信息有误' END) AS statusName,
		C.PRODUCT_NAME AS productName,
		C.PRODUCT_INTEGRAL_PRICE AS productIntegralPrice,
		C.PRODUCT_IMG AS productImg,
		D.LOGISTICS_CODE AS logisticsCode
		FROM lotus.ORDER A
		INNER JOIN ORDER_STATUS B ON A.ID = B.ORDER_ID  AND B.VALID = 1
		INNER JOIN PRODUCT C ON A.PRODUCT_ID = C.ID
        LEFT JOIN LOGISTICS D ON D.ORDER_ID = A.ID
	    <trim prefix=" WHERE "  suffixOverrides=" AND ">
	      <if test="status != null">
	        B.STATUS = #{status,jdbcType=INTEGER} AND 
	      </if>
	       <if test="id != null">
	        A.ID = #{id,jdbcType=BIGINT} AND 
	      </if>
	      <if test="createBy != null">
	        A.CREATE_BY = #{createBy,jdbcType=BIGINT} AND 
	      </if>
	     
		</trim>
	
	   ORDER BY A.CREATE_TIME DESC
  </select>
 
</mapper>